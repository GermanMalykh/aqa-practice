name: Test

on: 
  workflow_dispatch:
    inputs:
      test_type:
        description: Choose test type
        required: true
        default: all
        type: choice
        options:
          - smoke
          - regression
          - all
  push:
    branches: [ main, master ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    environment: github-pages
    
    steps:
      # выкачиваем репозиторий
      - uses: actions/checkout@v4
      
      # настраиваем java
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      # Запускаем Selenoid
      - name: Start Selenoid
        run: |
          curl -s https://aerokube.com/cm/bash | bash
          ./cm selenoid start --browsers "chrome" --last-versions 1 --port 4444
          sleep 10
      
      # запускаем тесты
      - name: Run tests
        env:
          CI: true
        run: |
          ./gradlew clean test \
            -Dselenide.remote=http://localhost:4444/wd/hub \
            -Dselenide.browser=chrome \
            --continue --no-daemon
      
      # генерируем отчет Allure
      - name: Generate Allure Report
        run: |
          ./gradlew allureReport
      
      # Сохраняем отчеты как артефакт
      - name: Store Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/reports/allure-report
          retention-days: 1
      
      # Очищаем Selenoid
      - name: Cleanup
        if: always()
        run: |
          ./cm selenoid stop || true
          pkill -f chrome || true

  publish-report:
    runs-on: ubuntu-latest
    needs: test
    name: Report publication
    environment: github-pages
    
    steps:
      # Скачиваем отчеты
      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report
      
      # Загружаем артефакт для GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './allure-report'
      
      # Настраиваем GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: none
          enablement: true
      
      # Публикуем отчет на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
